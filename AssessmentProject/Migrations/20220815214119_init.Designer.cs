// <auto-generated />
using System;
using AssessmentProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssessmentProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220815214119_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssessmentProject.Models.assessment_answers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("answer")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<long>("assessment_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<long>("question_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint");

                    b.Property<int?>("score")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<long>("user_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("assessment_answers");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_enrols", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("assessment_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<int?>("result")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int?>("score")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<long>("user_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("assessment_id");

                    b.ToTable("assessment_enrols");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_match", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("_answer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("_question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("answer")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<string>("option")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("order")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int>("question_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("question_id");

                    b.ToTable("assessment_match");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_options", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int?>("correct")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<string>("option")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("order")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int>("question_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("question_id");

                    b.ToTable("assessment_options");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_questions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<long?>("category_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<int?>("level")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int?>("order")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("assessment_questions");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_questions_relation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("assessment_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<int>("question_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("assessment_id");

                    b.HasIndex("question_id");

                    b.ToTable("assessment_questions_relation");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_text", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("answer")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("order")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<int>("question_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("question_id")
                        .IsUnique();

                    b.ToTable("assessment_text");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_true_false", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<int?>("is_true")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int>("question_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("question_id")
                        .IsUnique();

                    b.ToTable("assessment_true_false");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessments", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<long?>("category_id")
                        .HasMaxLength(20)
                        .HasColumnType("bigint");

                    b.Property<DateTime>("create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("Getdate()");

                    b.Property<int?>("create_by")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int?>("durition")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int?>("published")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("short_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("slug")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("update_by")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("assessments");
                });

            modelBuilder.Entity("AssessmentProject.Models.users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_enrols", b =>
                {
                    b.HasOne("AssessmentProject.Models.assessments", "assessment")
                        .WithMany("enrols")
                        .HasForeignKey("assessment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assessment");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_match", b =>
                {
                    b.HasOne("AssessmentProject.Models.assessment_questions", "question")
                        .WithMany("match")
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_options", b =>
                {
                    b.HasOne("AssessmentProject.Models.assessment_questions", "question")
                        .WithMany("option")
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_questions_relation", b =>
                {
                    b.HasOne("AssessmentProject.Models.assessments", "assessment")
                        .WithMany("relations")
                        .HasForeignKey("assessment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssessmentProject.Models.assessment_questions", "question")
                        .WithMany("relations")
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assessment");

                    b.Navigation("question");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_text", b =>
                {
                    b.HasOne("AssessmentProject.Models.assessment_questions", "question")
                        .WithOne("text_id")
                        .HasForeignKey("AssessmentProject.Models.assessment_text", "question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_true_false", b =>
                {
                    b.HasOne("AssessmentProject.Models.assessment_questions", "question")
                        .WithOne("true_False_id")
                        .HasForeignKey("AssessmentProject.Models.assessment_true_false", "question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessment_questions", b =>
                {
                    b.Navigation("match");

                    b.Navigation("option");

                    b.Navigation("relations");

                    b.Navigation("text_id");

                    b.Navigation("true_False_id");
                });

            modelBuilder.Entity("AssessmentProject.Models.assessments", b =>
                {
                    b.Navigation("enrols");

                    b.Navigation("relations");
                });
#pragma warning restore 612, 618
        }
    }
}
